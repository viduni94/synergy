// Generated from grammar/hccl.g4 by ANTLR 4.7.1
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u0018\u00c5\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006",
    "\u0003\u0006\u0005\u0006I\n\u0006\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t",
    "\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003",
    "\f\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003",
    "\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003",
    "\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003",
    "\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003",
    "\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0006\u0013\u0085",
    "\n\u0013\r\u0013\u000e\u0013\u0086\u0003\u0013\u0003\u0013\u0007\u0013",
    "\u008b\n\u0013\f\u0013\u000e\u0013\u008e\u000b\u0013\u0005\u0013\u0090",
    "\n\u0013\u0003\u0013\u0003\u0013\u0006\u0013\u0094\n\u0013\r\u0013\u000e",
    "\u0013\u0095\u0005\u0013\u0098\n\u0013\u0003\u0014\u0003\u0014\u0007",
    "\u0014\u009c\n\u0014\f\u0014\u000e\u0014\u009f\u000b\u0014\u0003\u0015",
    "\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0007\u0017",
    "\u00a7\n\u0017\f\u0017\u000e\u0017\u00aa\u000b\u0017\u0003\u0017\u0003",
    "\u0017\u0003\u0017\u0007\u0017\u00af\n\u0017\f\u0017\u000e\u0017\u00b2",
    "\u000b\u0017\u0003\u0017\u0005\u0017\u00b5\n\u0017\u0003\u0018\u0003",
    "\u0018\u0003\u0018\u0005\u0018\u00ba\n\u0018\u0003\u0019\u0003\u0019",
    "\u0003\u0019\u0005\u0019\u00bf\n\u0019\u0003\u001a\u0003\u001a\u0003",
    "\u001b\u0003\u001b\u0003\u001b\u0002\u0002\u001c\u0003\u0003\u0005\u0004",
    "\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015",
    "\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013",
    "%\u0014\'\u0015)\u0002+\u0002-\u0016/\u00021\u00023\u00175\u0018\u0003",
    "\u0002\b\u0003\u00022;\u0004\u0002GGgg\u0004\u0002C\\c|\u0006\u0002",
    "\f\f\u000f\u000f$$^^\u0006\u0002\f\f\u000f\u000f))^^\u0005\u0002\u000b",
    "\f\u000f\u000f\"\"\u0002\u00cd\u0002\u0003\u0003\u0002\u0002\u0002\u0002",
    "\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002",
    "\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002",
    "\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002",
    "\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002",
    "\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002",
    "\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002",
    "\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002",
    "!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003",
    "\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002-\u0003\u0002",
    "\u0002\u0002\u00023\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002",
    "\u0002\u00037\u0003\u0002\u0002\u0002\u00059\u0003\u0002\u0002\u0002",
    "\u0007;\u0003\u0002\u0002\u0002\t=\u0003\u0002\u0002\u0002\u000bH\u0003",
    "\u0002\u0002\u0002\rJ\u0003\u0002\u0002\u0002\u000fN\u0003\u0002\u0002",
    "\u0002\u0011S\u0003\u0002\u0002\u0002\u0013Y\u0003\u0002\u0002\u0002",
    "\u0015^\u0003\u0002\u0002\u0002\u0017b\u0003\u0002\u0002\u0002\u0019",
    "e\u0003\u0002\u0002\u0002\u001bn\u0003\u0002\u0002\u0002\u001ds\u0003",
    "\u0002\u0002\u0002\u001fw\u0003\u0002\u0002\u0002!\u007f\u0003\u0002",
    "\u0002\u0002#\u0081\u0003\u0002\u0002\u0002%\u0084\u0003\u0002\u0002",
    "\u0002\'\u0099\u0003\u0002\u0002\u0002)\u00a0\u0003\u0002\u0002\u0002",
    "+\u00a2\u0003\u0002\u0002\u0002-\u00b4\u0003\u0002\u0002\u0002/\u00b9",
    "\u0003\u0002\u0002\u00021\u00be\u0003\u0002\u0002\u00023\u00c0\u0003",
    "\u0002\u0002\u00025\u00c2\u0003\u0002\u0002\u000278\u0007.\u0002\u0002",
    "8\u0004\u0003\u0002\u0002\u00029:\u0007?\u0002\u0002:\u0006\u0003\u0002",
    "\u0002\u0002;<\u0007*\u0002\u0002<\b\u0003\u0002\u0002\u0002=>\u0007",
    "+\u0002\u0002>\n\u0003\u0002\u0002\u0002?@\u0007W\u0002\u0002@A\u0007",
    "U\u0002\u0002AI\u0007F\u0002\u0002BC\u0007I\u0002\u0002CD\u0007D\u0002",
    "\u0002DI\u0007R\u0002\u0002EF\u0007G\u0002\u0002FG\u0007V\u0002\u0002",
    "GI\u0007J\u0002\u0002H?\u0003\u0002\u0002\u0002HB\u0003\u0002\u0002",
    "\u0002HE\u0003\u0002\u0002\u0002I\f\u0003\u0002\u0002\u0002JK\u0007",
    "q\u0002\u0002KL\u0007p\u0002\u0002LM\u0007g\u0002\u0002M\u000e\u0003",
    "\u0002\u0002\u0002NO\u0007|\u0002\u0002OP\u0007g\u0002\u0002PQ\u0007",
    "t\u0002\u0002QR\u0007q\u0002\u0002R\u0010\u0003\u0002\u0002\u0002ST",
    "\u0007u\u0002\u0002TU\u0007e\u0002\u0002UV\u0007c\u0002\u0002VW\u0007",
    "n\u0002\u0002WX\u0007g\u0002\u0002X\u0012\u0003\u0002\u0002\u0002YZ",
    "\u0007i\u0002\u0002Z[\u0007k\u0002\u0002[\\\u0007x\u0002\u0002\\]\u0007",
    "g\u0002\u0002]\u0014\u0003\u0002\u0002\u0002^_\u0007c\u0002\u0002_`",
    "\u0007p\u0002\u0002`a\u0007f\u0002\u0002a\u0016\u0003\u0002\u0002\u0002",
    "bc\u0007q\u0002\u0002cd\u0007t\u0002\u0002d\u0018\u0003\u0002\u0002",
    "\u0002ef\u0007v\u0002\u0002fg\u0007t\u0002\u0002gh\u0007w\u0002\u0002",
    "hi\u0007p\u0002\u0002ij\u0007e\u0002\u0002jk\u0007c\u0002\u0002kl\u0007",
    "v\u0002\u0002lm\u0007g\u0002\u0002m\u001a\u0003\u0002\u0002\u0002no",
    "\u0007v\u0002\u0002op\u0007j\u0002\u0002pq\u0007g\u0002\u0002qr\u0007",
    "p\u0002\u0002r\u001c\u0003\u0002\u0002\u0002st\u0007i\u0002\u0002tu",
    "\u0007g\u0002\u0002uv\u0007v\u0002\u0002v\u001e\u0003\u0002\u0002\u0002",
    "wx\u0007c\u0002\u0002xy\u0007p\u0002\u0002yz\u0007{\u0002\u0002z{\u0007",
    "v\u0002\u0002{|\u0007k\u0002\u0002|}\u0007o\u0002\u0002}~\u0007g\u0002",
    "\u0002~ \u0003\u0002\u0002\u0002\u007f\u0080\u0005#\u0012\u0002\u0080",
    "\"\u0003\u0002\u0002\u0002\u0081\u0082\u0005-\u0017\u0002\u0082$\u0003",
    "\u0002\u0002\u0002\u0083\u0085\t\u0002\u0002\u0002\u0084\u0083\u0003",
    "\u0002\u0002\u0002\u0085\u0086\u0003\u0002\u0002\u0002\u0086\u0084\u0003",
    "\u0002\u0002\u0002\u0086\u0087\u0003\u0002\u0002\u0002\u0087\u008f\u0003",
    "\u0002\u0002\u0002\u0088\u008c\u00070\u0002\u0002\u0089\u008b\t\u0002",
    "\u0002\u0002\u008a\u0089\u0003\u0002\u0002\u0002\u008b\u008e\u0003\u0002",
    "\u0002\u0002\u008c\u008a\u0003\u0002\u0002\u0002\u008c\u008d\u0003\u0002",
    "\u0002\u0002\u008d\u0090\u0003\u0002\u0002\u0002\u008e\u008c\u0003\u0002",
    "\u0002\u0002\u008f\u0088\u0003\u0002\u0002\u0002\u008f\u0090\u0003\u0002",
    "\u0002\u0002\u0090\u0097\u0003\u0002\u0002\u0002\u0091\u0093\t\u0003",
    "\u0002\u0002\u0092\u0094\t\u0002\u0002\u0002\u0093\u0092\u0003\u0002",
    "\u0002\u0002\u0094\u0095\u0003\u0002\u0002\u0002\u0095\u0093\u0003\u0002",
    "\u0002\u0002\u0095\u0096\u0003\u0002\u0002\u0002\u0096\u0098\u0003\u0002",
    "\u0002\u0002\u0097\u0091\u0003\u0002\u0002\u0002\u0097\u0098\u0003\u0002",
    "\u0002\u0002\u0098&\u0003\u0002\u0002\u0002\u0099\u009d\u0005)\u0015",
    "\u0002\u009a\u009c\u0005+\u0016\u0002\u009b\u009a\u0003\u0002\u0002",
    "\u0002\u009c\u009f\u0003\u0002\u0002\u0002\u009d\u009b\u0003\u0002\u0002",
    "\u0002\u009d\u009e\u0003\u0002\u0002\u0002\u009e(\u0003\u0002\u0002",
    "\u0002\u009f\u009d\u0003\u0002\u0002\u0002\u00a0\u00a1\t\u0004\u0002",
    "\u0002\u00a1*\u0003\u0002\u0002\u0002\u00a2\u00a3\t\u0002\u0002\u0002",
    "\u00a3,\u0003\u0002\u0002\u0002\u00a4\u00a8\u0007$\u0002\u0002\u00a5",
    "\u00a7\u0005/\u0018\u0002\u00a6\u00a5\u0003\u0002\u0002\u0002\u00a7",
    "\u00aa\u0003\u0002\u0002\u0002\u00a8\u00a6\u0003\u0002\u0002\u0002\u00a8",
    "\u00a9\u0003\u0002\u0002\u0002\u00a9\u00ab\u0003\u0002\u0002\u0002\u00aa",
    "\u00a8\u0003\u0002\u0002\u0002\u00ab\u00b5\u0007$\u0002\u0002\u00ac",
    "\u00b0\u0007)\u0002\u0002\u00ad\u00af\u00051\u0019\u0002\u00ae\u00ad",
    "\u0003\u0002\u0002\u0002\u00af\u00b2\u0003\u0002\u0002\u0002\u00b0\u00ae",
    "\u0003\u0002\u0002\u0002\u00b0\u00b1\u0003\u0002\u0002\u0002\u00b1\u00b3",
    "\u0003\u0002\u0002\u0002\u00b2\u00b0\u0003\u0002\u0002\u0002\u00b3\u00b5",
    "\u0007)\u0002\u0002\u00b4\u00a4\u0003\u0002\u0002\u0002\u00b4\u00ac",
    "\u0003\u0002\u0002\u0002\u00b5.\u0003\u0002\u0002\u0002\u00b6\u00ba",
    "\n\u0005\u0002\u0002\u00b7\u00b8\u0007^\u0002\u0002\u00b8\u00ba\u000b",
    "\u0002\u0002\u0002\u00b9\u00b6\u0003\u0002\u0002\u0002\u00b9\u00b7\u0003",
    "\u0002\u0002\u0002\u00ba0\u0003\u0002\u0002\u0002\u00bb\u00bf\n\u0006",
    "\u0002\u0002\u00bc\u00bd\u0007^\u0002\u0002\u00bd\u00bf\u000b\u0002",
    "\u0002\u0002\u00be\u00bb\u0003\u0002\u0002\u0002\u00be\u00bc\u0003\u0002",
    "\u0002\u0002\u00bf2\u0003\u0002\u0002\u0002\u00c0\u00c1\u0007b\u0002",
    "\u0002\u00c14\u0003\u0002\u0002\u0002\u00c2\u00c3\t\u0007\u0002\u0002",
    "\u00c3\u00c4\b\u001b\u0002\u0002\u00c46\u0003\u0002\u0002\u0002\u000f",
    "\u0002H\u0086\u008c\u008f\u0095\u0097\u009d\u00a8\u00b0\u00b4\u00b9",
    "\u00be\u0003\u0003\u001b\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function hcclLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

hcclLexer.prototype = Object.create(antlr4.Lexer.prototype);
hcclLexer.prototype.constructor = hcclLexer;

Object.defineProperty(hcclLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

hcclLexer.EOF = antlr4.Token.EOF;
hcclLexer.T__0 = 1;
hcclLexer.T__1 = 2;
hcclLexer.T__2 = 3;
hcclLexer.T__3 = 4;
hcclLexer.Currency = 5;
hcclLexer.OneKeyword = 6;
hcclLexer.ZeroKeyword = 7;
hcclLexer.Scale = 8;
hcclLexer.Give = 9;
hcclLexer.And = 10;
hcclLexer.Or = 11;
hcclLexer.Truncate = 12;
hcclLexer.Then = 13;
hcclLexer.Get = 14;
hcclLexer.Anytime = 15;
hcclLexer.Date = 16;
hcclLexer.DateInString = 17;
hcclLexer.ObsDouble = 18;
hcclLexer.ID = 19;
hcclLexer.StringLiteral = 20;
hcclLexer.BACKQUOTE = 21;
hcclLexer.WS = 22;

hcclLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

hcclLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

hcclLexer.prototype.literalNames = [ null, "','", "'='", "'('", "')'", null, 
                                     "'one'", "'zero'", "'scale'", "'give'", 
                                     "'and'", "'or'", "'truncate'", "'then'", 
                                     "'get'", "'anytime'", null, null, null, 
                                     null, null, "'`'" ];

hcclLexer.prototype.symbolicNames = [ null, null, null, null, null, "Currency", 
                                      "OneKeyword", "ZeroKeyword", "Scale", 
                                      "Give", "And", "Or", "Truncate", "Then", 
                                      "Get", "Anytime", "Date", "DateInString", 
                                      "ObsDouble", "ID", "StringLiteral", 
                                      "BACKQUOTE", "WS" ];

hcclLexer.prototype.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "Currency", 
                                  "OneKeyword", "ZeroKeyword", "Scale", 
                                  "Give", "And", "Or", "Truncate", "Then", 
                                  "Get", "Anytime", "Date", "DateInString", 
                                  "ObsDouble", "ID", "IdentifierStart", 
                                  "IdentifierPart", "StringLiteral", "DoubleQuotedStringCharacter", 
                                  "SingleQuotedStringCharacter", "BACKQUOTE", 
                                  "WS" ];

hcclLexer.prototype.grammarFileName = "hccl.g4";


hcclLexer.prototype.action = function(localctx, ruleIndex, actionIndex) {
	switch (ruleIndex) {
	case 25:
		this.WS_action(localctx, actionIndex);
		break;
	default:
		throw "No registered action for:" + ruleIndex;
	}
};

hcclLexer.prototype.WS_action = function(localctx , actionIndex) {
	switch (actionIndex) {
	case 0:
		skip();
		break;
	default:
		throw "No registered action for:" + actionIndex;
	}
};


exports.hcclLexer = hcclLexer;

